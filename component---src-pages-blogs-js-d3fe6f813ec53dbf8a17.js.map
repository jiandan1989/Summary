{"version":3,"sources":["webpack:///./src/components/BlogList/index.js","webpack:///./src/pages/blogs.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/wrapper.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/useHooks/useScrollPercent.js","webpack:///./src/layout/Progress.js","webpack:///./src/layout/Header.js","webpack:///./src/layout/index.js","webpack:///./src/utils/date.ts"],"names":["ListItem","Item","ListItemMeta","Meta","BlogList","_ref","posts","react_default","a","createElement","list_default","size","rowKey","itemLayout","dataSource","renderItem","_ref2","node","title","frontmatter","fields","slug","key","gatsby_browser_entry","to","description","react","tag_default","color","dangerouslySetInnerHTML","__html","excerpt","formatDate","date","BlogPage","data","location","siteTitle","objectWithoutPropertiesLoose_default","site","siteMetadata","allMarkdownRemark","edges","layout","seo","keywords","card_default","bordered","style","marginTop","extra","bodyStyle","padding","components_BlogList","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","LayoutWrapper","styled","div","withConfig","displayName","componentId","ContentWrapper","main","HeaderWrapper","antd_lib_menu__WEBPACK_IMPORTED_MODULE_1___default","BlogLeafWrapper","bg","bgImage","nav","FlexWrapper","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","useScrollPercent","_useState","useState","percent","setPercent","scrollHandler","innerHeight","window","currentPos","scrollY","scrollHeight","Math","max","document","body","documentElement","offsetHeight","clientHeight","totalScroll","getIndicatorPercentageWidth","useEffect","addEventListener","removeEventListener","ProgressWrapper","progress_default","ProgressView","showInfo","strokeColor","0%","50","100%","Header","affix_default","wrapper","mode","menu_default","Layout","layout_Header","_2994927498","moment_1","__importDefault","formatString","formatStringWithHMS","format"],"mappings":"iPAOcA,MAANC,KACMC,EAAiBF,EAAvBG,KAmCOC,MAjCf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MAClB,OACEC,EAAAC,EAAAC,cAAAC,EAAAF,EAAA,CACEG,KAAK,QACLC,OAAO,KACPC,WAAW,WACXC,WAAYR,EACZS,WAAY,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACPC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACEd,EAAAC,EAAAC,cAACT,EAAD,CAAUsB,IAAKL,EAAKG,OAAOC,MACzBd,EAAAC,EAAAC,cAACP,EAAD,CACEgB,MAAOX,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAIP,EAAKG,OAAOC,MAAOH,GACpCO,YACElB,EAAAC,EAAAC,cAACiB,EAAA,SAAD,KAEEnB,EAAAC,EAAAC,cAAAkB,EAAAnB,EAAA,CAAKoB,MAAM,WAAX,cACArB,EAAAC,EAAAC,cAAAkB,EAAAnB,EAAA,CAAKoB,MAAM,WAAX,cACArB,EAAAC,EAAAC,cAAAkB,EAAAnB,EAAA,CAAKoB,MAAM,UAAX,OACArB,EAAAC,EAAAC,cAAAkB,EAAAnB,EAAA,CAAKoB,MAAM,WAAX,WAINrB,EAAAC,EAAAC,cAAA,KAAGoB,wBAAyB,CAAEC,OAAQb,EAAKc,WAC3CxB,EAAAC,EAAAC,cAAA,WAdF,SAeQF,EAAAC,EAAAC,cAAA,aAAQuB,qBAAWf,EAAKE,YAAYc,6DCHvCC,UAlBf,SAAA7B,GAA+C,IAA3B8B,EAA2B9B,EAA3B8B,KAAMC,EAAqB/B,EAArB+B,SAClBC,GADuCC,IAAAjC,EAAA,qBAC3B8B,EAAKI,KAAKC,aAAatB,OACnCZ,EAAQ6B,EAAKM,kBAAkBC,MACrC,OACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAYP,SAAUA,EAAUlB,MAAOmB,GACrC9B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAK1B,MAAM,OAAO2B,SAAU,yCAC5BtC,EAAAC,EAAAC,cAAAqC,EAAAtC,EAAA,CACEuC,UAAU,EACVC,MAAO,CAAEC,UAAW,IACpB/B,MAAM,8BACNgC,MAAM,iBACNC,UAAW,CAAEC,QAAS,kBACtB7C,EAAAC,EAAAC,cAAC4C,EAAD,CAAU/C,MAAOA,OAMV4B,IAEFoB,EAAS,+CClCtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAzD,IAAA+C,EAAAC,EAAAC,EAAA,sBAAAO,EAAA,WAAAT,EAAA,SAaMW,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAThE,GAA2E,IAAxCiE,EAAwCjE,EAAxCiE,gBAAiBnC,EAAuB9B,EAAvB8B,KAAMoC,EAAiBlE,EAAjBkE,MAAOC,EAAUnE,EAAVmE,OACzDC,EAAYtC,EACdA,EAAKA,KACLmC,EAAgBC,IAAUD,EAAgBC,GAAOpC,KAErD,OACEyB,EAAApD,EAAAC,cAACmD,EAAApD,EAAMkE,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAab,EAAApD,EAAAC,cAAA,qCAKrB,IAAMiD,EAAc,SAAAiB,GAAS,IACnBxC,EAAkCwC,EAAlCxC,KAAMoC,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACEhB,EAAApD,EAAAC,cAACyD,EAAmBW,SAApB,KACG,SAAAP,GAAe,OACdV,EAAApD,EAAAC,cAAC4D,EAAD,CACElC,KAAMA,EACNoC,MAAOA,EACPC,OAAQA,GAAUI,EAClBN,gBAAiBA,OA6B3BZ,EAAYoB,UAAY,CACtB3C,KAAM4C,IAAUC,OAChBT,MAAOQ,IAAUE,OAAOC,WACxBV,OAAQO,IAAUI,KAClBP,SAAUG,IAAUI,8OChETC,EAAgBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,mBAIbK,EAAiBL,IAAOM,KAAVJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAGJ,CAAH,0EAOdO,EAAgBP,YAAOQ,EAAArF,GAAV+E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,uDAwBbS,GAlBoBT,IAAO7E,EAAV+E,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAGJ,CAAH,iPAUd,SAACV,GAAD,OAAWA,EAAMoB,IAAM,eACjB,SAACpB,GAAD,OAAWA,EAAMqB,UAORX,IAAOY,IAAVV,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAGJ,CAAH,sJAafa,EAAcb,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,wCCvDxB,IAAsBc,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6FCKzCK,EAAmB,SAAAnG,GAAiC,IAA9B+B,EAA8B/B,EAA9B+B,SAAUqE,EAAoBpG,EAApBoG,cACpC,OAAKA,EAGEtC,IAAM1D,cAAciG,IAApBC,OAAAC,OAAA,CACLxE,WACAqE,iBACGA,EAAcI,OALV,MASXL,EAAiB1B,UAAY,CAC3B1C,SAAU2C,IAAU+B,MAAM,CACxBC,SAAUhC,IAAUE,OAAOC,aAC1BA,YAGUsB,sHCjBf,SAASQ,EAAT3G,GAA2D,IAA5CoB,EAA4CpB,EAA5CoB,YAAawF,EAA+B5G,EAA/B4G,KAAMC,EAAyB7G,EAAzB6G,KAAMrE,EAAmBxC,EAAnBwC,SAAU3B,EAASb,EAATa,MAChD,OACEiG,EAAA3G,EAAAC,cAAC2G,EAAA,EAAD,CACE7C,MAAO8C,EACP7C,OAAQ,SAAArC,GACN,IAAMmF,EACJ7F,GAAeU,EAAKI,KAAKC,aAAaf,YACxC,OACE0F,EAAA3G,EAAAC,cAAC8G,EAAA/G,EAAD,CACEgH,eAAgB,CACdP,QAEF/F,MAAOA,EACPuG,cAAa,QAAUtF,EAAKI,KAAKC,aAAatB,MAC9CgG,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASzG,GAEX,CACE0G,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASxF,EAAKI,KAAKC,aAAaqF,QAElC,CACEH,KAAI,gBACJC,QAASzG,GAEX,CACEwG,KAAI,sBACJC,QAASL,IAGVQ,OACCjF,EAASkF,OAAS,EACd,CACEL,KAAI,WACJC,QAAS9E,EAASmF,KAAT,OAEX,IAELF,OAAOZ,MAtDlB/E,KAAA8F,IA8DJjB,EAAIkB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNrE,SAAU,IAGZmE,EAAIlC,UAAY,CACdrD,YAAasD,IAAUE,OACvBgC,KAAMlC,IAAUE,OAChBiC,KAAMnC,IAAUoD,MAChBtF,SAAUkC,IAAUqD,QAAQrD,IAAUE,QACtC/D,MAAO6D,IAAUE,OAAOC,YAGX8B,MAEf,IAAMK,EAAY,6WC9DH,SAASgB,IAAmB,IAAAC,EACXC,mBAAS,GAAhCC,EADkCF,EAAA,GACzBG,EADyBH,EAAA,GAGzC,SAASI,IAAgB,IACfC,EAAgBC,OAAhBD,YACFE,EAAaD,OAAOE,QACpBC,EApBDC,KAAKC,IACVC,SAASC,KAAKJ,aACdG,SAASE,gBAAgBL,aACzBG,SAASC,KAAKE,aACdH,SAASE,gBAAgBC,aACzBH,SAASC,KAAKG,aACdJ,SAASE,gBAAgBE,cAgBzBb,EAZJ,SAAqCI,EAAYU,GAC/C,OAAQV,EAAaU,EAAe,IAWvBC,CAA4BX,EADhBE,EAAeJ,IAYxC,OARAc,oBAAU,WAGR,OAFAb,OAAOc,iBAAiB,SAAUhB,GAE3B,WACLE,OAAOe,oBAAoB,SAAUjB,KAEtC,IAEI,CAAEF,WC9BX,IAAMoB,EAAkBvE,YAAOwE,EAAArJ,GAAV+E,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,oHAcN,SAASyE,IAAe,IAC7BtB,EAAYH,IAAZG,QACR,OAAOA,EACLjI,EAAAC,EAAAC,cAACmJ,EAAD,CACEpB,QAASA,EACTuB,UAAU,EACVC,YAAa,CACXC,KAAM,UACNC,GAAM,SACNC,OAAQ,aAGV,KCPSC,MAnBf,WACE,OACE7J,EAAAC,EAAAC,cAAA4J,EAAA7J,EAAA,KACED,EAAAC,EAAAC,cAACqJ,EAAD,MACAvJ,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAeC,KAAK,cAClBhK,EAAAC,EAAAC,cAAA+J,EAAAhK,EAAMP,KAAN,CAAWqB,IAAI,QACbf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAG,KAAT,OAEFjB,EAAAC,EAAAC,cAAA+J,EAAAhK,EAAMP,KAAN,CAAWqB,IAAI,SACbf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAG,UAAT,OAEFjB,EAAAC,EAAAC,cAAA+J,EAAAhK,EAAMP,KAAN,CAAWqB,IAAI,SACbf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAG,UAAT,WCIKiJ,IAtBf,SAAApK,GAAwC,IAAtBuE,EAAsBvE,EAAtBuE,SAAUxC,EAAY/B,EAAZ+B,SAC1B,OACE7B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEgD,MAAK,aASLC,OAAQ,SAACrC,GAAD,OACN5B,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,KACE/J,EAAAC,EAAAC,cAACiK,EAAD,CAAQtI,SAAUA,EAAUC,UAAWF,EAAKI,KAAKC,aAAatB,QAC9DX,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,KAAiB1F,KAbvBzC,KAAAwI,4KCRJ,IAAAC,EAAAC,EAAAtH,EAAA,MAEa8C,EAAAyE,aAAe,aACfzE,EAAA0E,oBAAsB,sBAEnC1E,EAAArE,WAAA,SAA2BC,GACzB,OAAO2I,EAAArE,QAAOtE,GAAM+I,OAAO3E,EAAAyE","file":"component---src-pages-blogs-js-d3fe6f813ec53dbf8a17.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'gatsby';\n\nimport { List, Tag } from 'antd';\n\nimport { formatDate } from '@/utils/date';\n\nconst { Item: ListItem } = List;\nconst { Meta: ListItemMeta } = ListItem;\n\nfunction BlogList({ posts }) {\n  return (\n    <List\n      size=\"large\"\n      rowKey=\"id\"\n      itemLayout=\"vertical\"\n      dataSource={posts}\n      renderItem={({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <ListItem key={node.fields.slug}>\n            <ListItemMeta\n              title={<Link to={node.fields.slug}>{title}</Link>}\n              description={\n                <Fragment>\n                  {/* 此处需要一张缩略图 @todo&nbsp; */}\n                  <Tag color=\"magenta\">Javascript</Tag>\n                  <Tag color=\"#f47d31\">TypeScript</Tag>\n                  <Tag color=\"purple\">css</Tag>\n                  <Tag color=\"#f47d31\">html</Tag>\n                </Fragment>\n              }\n            />\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            <br />\n            最后修改: <small>{formatDate(node.frontmatter.date)}</small>\n          </ListItem>\n        );\n      }}\n    />\n  );\n}\n\nexport default BlogList;\n","/**\n * @name: BlogPage\n * @desc: 博客页\n */\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\nimport BlogLayout from '@/layout';\nimport BlogList from '@/components/BlogList';\nimport SEO from '@/components/seo';\n\nimport { Card } from 'antd';\n\nfunction BlogPage({ data, location, ...rest }) {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <BlogLayout location={location} title={siteTitle}>\n      <SEO title=\"Blog\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <Card\n        bordered={false}\n        style={{ marginTop: 24 }}\n        title=\"此处需要添加可搜索(分页 / 标签分类 / 时间排序)\"\n        extra=\"需添加跳转及重新设计页面风格\"\n        bodyStyle={{ padding: '8px 32px 32px' }}>\n        <BlogList posts={posts} />\n      </Card>\n    </BlogLayout>\n  );\n}\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY MMMM DD\")\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * @desc: 容器\n */\n\nimport styled from 'styled-components'\nimport { Menu } from 'antd'\n\nexport const LayoutWrapper = styled.div`\n  height: 100vh;\n`\n\nexport const ContentWrapper = styled.main`\n  margin: 0 auto;\n  max-width: 960px;\n  height: calc(100% - 48px);\n  padding: 24px;\n`\n\nexport const HeaderWrapper = styled(Menu)`\n  margin: 0 auto;\n  max-width: 960px;\n  margin-bottom: 12px;\n`\n\nexport const BlogButtonWrapper = styled.a`\n  padding: 8px 12px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* text-shadow: 0px 0px 10px rgba(0,0,0,0.2);*/\n  box-shadow: 0 0 20px #eee;\n  border-radius: 10px;\n  bacgkround: ${(props) => props.bg || 'transparent'};\n  background-image: ${(props) => props.bgImage};\n\n  &:hover {\n    background-position: right center;\n  }\n`\n// 上下篇\nexport const BlogLeafWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 24px;\n\n  a {\n    transition: all 0.2s linear;\n    &:hover {\n      text-shadow: 1px 1px currentColor;\n    }\n  }\n`\nexport const FlexWrapper = styled.div`\n  display: flex;\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","/**\n * @name: useScrollPercent\n * @desc: 自定义获取滚动占比\n */\n\nimport { useEffect, useState } from 'react';\n\nfunction getScrollHeight() {\n  // https://javascript.info/size-and-scroll-window#width-height-of-the-document\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight,\n  );\n}\n\nfunction getIndicatorPercentageWidth(currentPos, totalScroll) {\n  return (currentPos / totalScroll) * 100;\n}\n\nexport default function useScrollPercent() {\n  const [percent, setPercent] = useState(0);\n\n  function scrollHandler() {\n    const { innerHeight } = window;\n    const currentPos = window.scrollY;\n    const scrollHeight = getScrollHeight();\n    const scrollDistance = scrollHeight - innerHeight;\n    setPercent(getIndicatorPercentageWidth(currentPos, scrollDistance));\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n\n  return { percent };\n}\n","/**\n * @name: ProgressView\n * @desc: 自定义滚动条\n * 部分参考 https://github.com/dmetivier/gatsby-plugin-page-progress\n */\n\nimport React from 'react';\nimport { Progress } from 'antd';\nimport styled from 'styled-components';\n\nimport useScrollPercent from '@/useHooks/useScrollPercent';\n\nconst ProgressWrapper = styled(Progress)`\n  &.ant-progress {\n    position: fixed;\n    top: 0;\n    left: 0;\n    line-height: 1;\n    font-size: 0;\n  }\n\n  .ant-progress-bg {\n    height: 5px !important;\n  }\n`;\n\nexport default function ProgressView() {\n  const { percent } = useScrollPercent();\n  return percent ? (\n    <ProgressWrapper\n      percent={percent}\n      showInfo={false}\n      strokeColor={{\n        '0%': '#108ee9',\n        '50': 'purple',\n        '100%': '#87d068',\n      }}\n    />\n  ) : null;\n}\n","/**\n * @desc: 布局 Header\n * @name: Header\n */\n\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { Menu, Affix } from 'antd';\n\nimport { HeaderWrapper } from '@/components/wrapper';\nimport ProgressView from './Progress';\n\nfunction Header() {\n  return (\n    <Affix>\n      <ProgressView />\n      <HeaderWrapper mode=\"horizontal\">\n        <Menu.Item key=\"home\">\n          <Link to=\"/\">首页</Link>\n        </Menu.Item>\n        <Menu.Item key=\"blogs\">\n          <Link to=\"/blogs\">博客</Link>\n        </Menu.Item>\n        <Menu.Item key=\"about\">\n          <Link to=\"/about\">关于我</Link>\n        </Menu.Item>\n      </HeaderWrapper>\n    </Affix>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { StaticQuery } from 'gatsby';\n\nimport Header from './Header';\nimport { LayoutWrapper, ContentWrapper } from '@/components/wrapper';\n\nfunction Layout({ children, location }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <LayoutWrapper>\n          <Header location={location} siteTitle={data.site.siteMetadata.title} />\n          <ContentWrapper>{children}</ContentWrapper>\n        </LayoutWrapper>\n      )}\n    />\n  );\n}\n\nexport default Layout;\n","import moment from 'moment';\n\nexport const formatString = 'YYYY-MM-DD';\nexport const formatStringWithHMS = 'YYYY-MM-DD HH:mm:ss';\n\nexport function formatDate(date: any) {\n  return moment(date).format(formatString);\n}\n"],"sourceRoot":""}