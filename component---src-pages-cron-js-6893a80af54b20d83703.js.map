{"version":3,"sources":["webpack:///./src/contants/index.js","webpack:///./src/pages/cron.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/wrapper.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["CRON_UNIT_TYPES","month","week","day","NORMAL_LAYOUT","labelCol","span","wrapperCol","SMALL_LAYOUT","TextArea","daysType","getDays","type","Array","fill","map","k","i","key","Option","FormItem","Item","__webpack_exports__","form_default","a","create","_ref","form","_useState","useState","previewData","setPreviewData","getFieldDecorator","getFieldValue","validateFields","formatCron","_formatCron","apply","this","arguments","asyncToGenerator_default","regenerator_default","mark","_callee","_ref2","unit","min","hour","sec","code","wrap","_context","prev","next","Promise","resolve","reject","err","values","time","data","minute","second","sent","stop","react_default","createElement","react","page_header_default","title","onBack","card_default","alert_default","showIcon","message","seo","Object","assign","label","row_default","gutter","col_default","select_default","onChange","keys","wrapper","style","flex","initialValue","item","moment","time_picker_default","value","autosize","minRows","maxRows","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","LayoutWrapper","styled","div","withConfig","displayName","componentId","ContentWrapper","main","HeaderWrapper","antd_lib_menu__WEBPACK_IMPORTED_MODULE_1___default","BlogLeafWrapper","bg","bgImage","nav","FlexWrapper","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-cron-js-6893a80af54b20d83703.js","sourcesContent":["/**\n * @desc: 变量控制\n */\nexport const CRON_UNIT_TYPES = {\n  month: '月',\n  week: '周',\n  day: '日',\n};\n\nexport const CRON_MONTH_DAYS = 31;\n\nexport const CRON_WEEK_DAYS = 7;\n\nexport const NORMAL_LAYOUT = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 }\n}\n\nexport const SMALL_LAYOUT = {\n  labelCol: { span: 4 },\n  wrapperCol: { span : 20 }\n}","/**\n * @desc: Cron 表达式\n * @name: Cron\n * @todo: 多选\n */\n\nimport React, { useState, Fragment } from 'react'\nimport SEO from '../components/seo'\nimport moment from 'moment'\nimport { FlexWrapper } from '../components/wrapper'\nimport {\n  Form,\n  Select,\n  Col,\n  Row,\n  TimePicker,\n  Card,\n  Input,\n  Alert,\n  PageHeader,\n} from 'antd'\n\nimport {\n  CRON_UNIT_TYPES,\n  CRON_MONTH_DAYS,\n  CRON_WEEK_DAYS,\n  NORMAL_LAYOUT,\n  SMALL_LAYOUT,\n} from '../contants'\n\nconst { TextArea } = Input\n\nconst daysType = {\n  month: CRON_MONTH_DAYS,\n  week: CRON_WEEK_DAYS,\n}\n\nconst getDays = (type = 'month') =>\n  Array(daysType[type])\n    .fill(1)\n    .map((k, i) => ({ key: i + 1 }))\nconst { Option } = Select\nconst { Item: FormItem } = Form\n\nfunction Cron({ form }) {\n  const [previewData, setPreviewData] = useState('')\n  const { getFieldDecorator, getFieldValue, validateFields } = form\n  function getValue() {\n    return new Promise((resolve, reject) => {\n      validateFields((err, values) => {\n        if (err) return reject(err)\n        const { time, unit, day } = values\n        const data = {\n          day,\n          unit,\n          min: time.minute(),\n          hour: time.hour(),\n          sec: time.second(),\n        }\n        return resolve(data)\n      })\n    })\n  }\n\n  async function formatCron() {\n    const { day, unit, min, hour, sec } = await getValue()\n    let code = ''\n    if (unit === 'month') {\n      code = `${sec} ${min} ${hour} ${day} * ?`\n    }\n    if (unit === 'week') {\n      code = `${sec} ${min} ${hour} 0 0 ${day}`\n    }\n    if (unit === 'day') {\n      code = `${sec} ${min} ${hour} * * ?`\n    }\n    setPreviewData(code)\n  }\n\n  return (\n    <Fragment>\n      <PageHeader\n        title='返回上一级'\n        onBack={() => null}\n      />\n      <Card title='Cron 表达式'>\n        <Alert\n          showIcon\n          message='@todo: 显示数据有延迟, 获取到的值是上一次的值'\n          type='warning'\n        />\n        <SEO title='Cron 表达式' />\n        <Form>\n          <FormItem label='Cron 表达式' {...NORMAL_LAYOUT}>\n            <Row gutter={48}>\n              <Col span={8}>\n                <FormItem label='每' {...SMALL_LAYOUT}>\n                  {getFieldDecorator('unit')(\n                    <Select onChange={formatCron}>\n                      {Object.keys(CRON_UNIT_TYPES).map((key) => (\n                        <Option key={key}>{CRON_UNIT_TYPES[key]}</Option>\n                      ))}\n                    </Select>,\n                  )}\n                </FormItem>\n              </Col>\n              {getFieldValue('unit') !== 'day' && (\n                <Col span={8}>\n                  <FlexWrapper>\n                    <FormItem style={{ flex: 1 }} label='第' {...SMALL_LAYOUT}>\n                      {getFieldDecorator('day', {\n                        initialValue: '',\n                      })(\n                        <Select onChange={formatCron}>\n                          {getDays(getFieldValue('unit')).map((item) => (\n                            <Option key={item.key}>{item.key}</Option>\n                          ))}\n                        </Select>,\n                      )}\n                    </FormItem>\n                    天\n                  </FlexWrapper>\n                </Col>\n              )}\n              <Col span={8}>\n                <FormItem label='时分秒' {...NORMAL_LAYOUT}>\n                  {getFieldDecorator('time', {\n                    initialValue: moment(),\n                  })(<TimePicker onChange={formatCron} />)}\n                </FormItem>\n              </Col>\n            </Row>\n          </FormItem>\n          <FormItem label='预览' {...NORMAL_LAYOUT}>\n            <TextArea\n              value={previewData}\n              autosize={{ minRows: 5, maxRows: 6 }}\n            />\n          </FormItem>\n        </Form>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default Form.create()(Cron)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * @desc: 容器\n */\n\nimport styled from 'styled-components'\nimport { Menu } from 'antd'\n\nexport const LayoutWrapper = styled.div`\n  height: 100vh;\n`\n\nexport const ContentWrapper = styled.main`\n  margin: 0 auto;\n  max-width: 960px;\n  height: calc(100% - 48px);\n  padding: 24px;\n`\n\nexport const HeaderWrapper = styled(Menu)`\n  margin: 0 auto;\n  max-width: 960px;\n  margin-bottom: 12px;\n`\n\nexport const BlogButtonWrapper = styled.a`\n  padding: 8px 12px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* text-shadow: 0px 0px 10px rgba(0,0,0,0.2);*/\n  box-shadow: 0 0 20px #eee;\n  border-radius: 10px;\n  bacgkround: ${(props) => props.bg || 'transparent'};\n  background-image: ${(props) => props.bgImage};\n\n  &:hover {\n    background-position: right center;\n  }\n`\n// 上下篇\nexport const BlogLeafWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 24px;\n\n  a {\n    transition: all 0.2s linear;\n    &:hover {\n      text-shadow: 1px 1px currentColor;\n    }\n  }\n`\nexport const FlexWrapper = styled.div`\n  display: flex;\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}