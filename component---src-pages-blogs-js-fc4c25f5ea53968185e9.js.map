{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/pages/blogs.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js","webpack:///./src/components/Layout.js"],"names":["bioQuery","Bio","react_default","a","createElement","gatsby_browser_entry","query","render","data","author","site","siteMetadata","_2567798390","BlogIndex","this","props","siteTitle","title","posts","allMarkdownRemark","edges","Layout","location","seo","keywords","map","_ref","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt","components_Bio","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Wrapper","styled","antd_lib_menu__WEBPACK_IMPORTED_MODULE_1___default","withConfig","displayName","componentId","Header","react__WEBPACK_IMPORTED_MODULE_2___default","mode","Item","gatsby__WEBPACK_IMPORTED_MODULE_3__","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ContentWrapper","main","div","gatsby__WEBPACK_IMPORTED_MODULE_2__","_header__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-blogs-js-fc4c25f5ea53968185e9.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <span>{author}</span>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/gatsby-icon.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"博客\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3>\n                <Link to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n        <Bio />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * @name: header\n */\n\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { Menu } from 'antd';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled(Menu)`\n  margin: 0 auto;\n  max-width: 960px;\n`;\n\nconst Header = () => {\n  return (\n    <Wrapper mode=\"horizontal\">\n      <Menu.Item key=\"home\">\n        <Link to=\"/\">首页</Link>\n      </Menu.Item>\n      <Menu.Item key=\"blogs\">\n      <Link to=\"/blogs\">博客</Link>\n      </Menu.Item>\n    </Wrapper>\n  );\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { StaticQuery } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Header from './header';\n\nconst ContentWrapper = styled.main`\n  margin: 0 auto;\n  max-width: 960px;\n  height: calc(100% - 48px);\n  padding: 24px;\n`;\n\nconst Wrapper = styled.div`\n  height: 100vh;\n`;\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Wrapper>\n        <Header location={location} siteTitle={data.site.siteMetadata.title} />\n        <ContentWrapper>\n          {children}\n        </ContentWrapper>\n      </Wrapper>\n    )}\n  />\n)\n\nexport default Layout"],"sourceRoot":""}